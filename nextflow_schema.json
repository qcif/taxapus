{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/daff/taxassignwf/master/nextflow_schema.json",
    "title": "daff/taxassignwf pipeline parameters",
    "description": "Taxonomic Assignment Nextflow Workflow for DAFF",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["metadata", "outdir", "sequences", "db_type", "taxdb", "analyst_name", "facility_name", "allowed_loci_file"],
            "properties": {
                "metadata": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "db_type": {
                    "type": "string",
                    "description": "Choose the type of database to use for sequence searches, either 'blast_core_nt' or 'bold'" ,
                    "fa_icon": "fas fa-database",
                    "enum": ["blast_core_nt", "bold"]
                },
                "blastdb": {
                    "type": "string",
                    "description": "Path to blastdb database files, e.g. /path/to/blastdb/core_nt",
                    "fa_icon": "fas fa-database"
                },
                "sequences": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to the FASTA file containing sequences to process.",
                    "help_text": "Specify the location of the FASTA file that contains the sequences you want to analyze.",
                    "fa_icon": "fas fa-file-alt",
                    "pattern": "^\\S+\\.fasta$"
                },
                "taxdb": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the taxonomic database folder, e.g. /path/to/taxdb",
                    "fa_icon": "fas fa-folder",
                    "exists": true
                },
                "accessions_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain BLAST accessions."
                },
                "taxonomy_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain taxonomy information."
                },
                "query_title_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain query titles."
                },
                "hits_json_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain hits in JSON format."
                },
                "hits_fasta_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain hits in FASTA format."
                },
                "flags_csv_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain flags in CSV format."
                },
                "taxonomy_id_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain taxonomy IDs."
                },
                "candidates_fasta_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain candidate sequences in FASTA format."
                },
                "candidates_csv_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain candidate sequences in CSV format."
                },
                "candidates_json_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain candidate sequences in JSON format."
                },
                "toi_detected_csv_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain detected TOIs in CSV format."
                },
                "timestamp_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain the timestamp."
                },
                "pmi_match_csv_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain PMI match results in CSV format."
                },
                "min_nt": {
                    "type": "integer",
                    "description": "Minimum number of nucleotides."
                },
                "min_q_coverage": {
                    "type": "number",
                    "description": "Minimum query coverage."
                },
                "min_identity": {
                    "type": "number",
                    "description": "Minimum identity percentage."
                },
                "min_identity_strict": {
                    "type": "number",
                    "description": "Minimum strict identity percentage."
                },
                "candidates_sources_json_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain candidates sources in JSON format."
                },
                "db_coverage_json_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain database coverage in JSON format."
                },
                "gbif_accepted_status": {
                    "type": "string",
                    "description": "GBIF accepted status."
                },
                "gbif_limit_records": {
                    "type": "integer",
                    "description": "GBIF limit records."
                },
                "ncbi_api_key": {
                    "type": "string",
                    "description": "NCBI API key."
               },
                "user_email": {
                    "type": "string",
                    "description": "User email."
                },
                "tree_nwk_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain the tree in Newick format."
                },
                "boxplot_img_filename": {
                    "type": "string",
                    "description": "Name of the file that will contain the boxplot image."
                },
                "analyst_name": {
                    "type": "string",
                    "description": "Name of the analyst who performed the analysis."
                },
                "facility_name": {
                    "type": "string",
                    "description": "Name of the facility where the analysis was performed."
                },
                "allowed_loci_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "^\\S+\\.json$",
                    "description": "Path to a file containing a list of allowed loci."
                },
                "bold_taxon_count_json": {
                    "type": "string",
                    "pattern": "^\\S+\\.json$",
                    "description": "Name of the file that will contain BOLD taxon count in JSON format."
                },
                "bold_taxon_collectors_json": {
                    "type": "string",
                    "pattern": "^\\S+\\.json$",
                    "description": "Name of the file that will contain BOLD taxon collectors in JSON format."
                },
                "bold_taxonomy_json": {
                    "type": "string",
                    "pattern": "^\\S+\\.json$",
                    "description": "Name of the file that will contain BOLD taxonomy in JSON format."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
